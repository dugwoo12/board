from flask import Flask, jsonify , g , request, render_template, session
import sqlite3, hashlib
DATABASE = './db/test.db'
app = Flask(__name__)

def get_db():
    db= getattr(g, '_database', None)
    if db is None:
        db= g.database = sqlite3.connect(DATABASE)
        db.row_factory = sqlite3.Row
    return db

@app.teardown_appcontext
def close_connection(exception):
    db = getattr(g, '_database', None)
    if db is not None: db.close()

def query_db(query, args=(), one=False):
    cur = get_db().execute(query, args)
    rv = cur.fetchall()
    cur.close()
    return (rv[0] if rv else None) if one else rv

def init_db():
    with app.app_context():
        db = get_db()
        with app.open_resource('schema.sql', mode='r') as f:
            db.cursor().executescript(f.read())
            db.commit()

def add_student(name,password,email):
    hw = hashlib.sha224(password).hexdigest()
    sql = "INSERT INTO users (name,password,email) VALUES('%s', '%s', '%s')" %(name,hw, email)
    print sql
    db = get_db()
    db.execute(sql)
    res =db.commit()
    return res

#def delete_student(name):
#    sql= "DELETE FROM students where name = '%s'" %(name)
#    print sql
#    db = get_db()
#    db.execute(sql)
#    res = db.commit()
#    return res

#def update_student(name,age):
#    sql= "UPDATE students set age = %d where name = '%s' " %(int(age),name)
#    print sql
#    db = get_db()
#    db.execute(sql)
#    res = db.commit()
#    return res

def find_student(name=''):
    sql = "select * from students where name = '%s' limit 1" %(name)
    print sql
    db = get_db()
    rv = db.execute(sql)
    res = rv.fetchall()
    rv.close()
    return res[0]
@app.route('/')
def users():
    return jsonify(hello='world')

@app.route('/login', methods=['GET','POST'])
def login():
    if request.method =='GET':
        return render_template('login.html')
    elif request.method =='POST':
        user_id = request.form.get('user_id')
        user_pw = request.form.get('user_pw')
        #user_hw = hashlib.sha224(user_pw).hexdigest()
        ret = get_user(user_id,user_pw)
        if len(ret)!=0:
            session['user_id'] = user_id
            session['user_pw'] = user_pw
            session['user_email']= res[0][2]
            return session['user_email']
        else:
            return 'login failed'
def get_user(name,pw):
    sql = 'select email from users where name="{}" and password="{}"'.format(name,pw)
    db = get_db()
    rv = db.execute(sql)
    res =rv.fetchall()
    print type(res)
    return res
@app.route('/add', methods =['GET','POST'])
def add_user():
    if request.method == 'GET':
        return render_template('add.html')
    else:
        add_student(name=request.form['name'], password=request.form['password'], email=request.form['email'])
    return ''

#@app.route('/delete', methods=['GET','POST'])
#def delete_user():
#    if request.method == 'GET':
#        return render_template('delete.html')
#    else:
#        delete_student(name=request.form['name'])
#    return ''

#@app.route('/update', methods=['GET','POST'])
#def update_user():
#    if request.method == 'GET':
#        return render_template('update.html')
#    else:
#        update_student(name=request.form['name'], age=request.form['age'])
#    return ''
app.secret_key = 'asaa'
@app.route('/find_user')
def find_user_by_name():
    name= request.args.get('name', '')
    student = find_student(name)
    return jsonify(name=student['name'], age=student['age'], sex=student['sex'])

if __name__=='__main__':
    app.run(debug=True, host='0.0.0.0', port=8080)



